name: CI DevSecOps Pipeline

on:
  push:
    branches:
      - '**'         # corre en cualquier rama
  pull_request:
    branches:
      - main        # y en PRs contra main

jobs:
  veracode-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Install Veracode CLI
        run: |
          curl -s https://packagecloud.io/install/repositories/veracode/veracode-cli/script.deb.sh | sudo bash
          sudo apt-get update
          sudo apt-get install -y veracode-cli

      - name: Configure Veracode credentials
        run: |
          veracode configure set \
            --vid ${{ secrets.VERACODE_API_ID }} \
            --vkey ${{ secrets.VERACODE_API_KEY }}

      - name: Run SAST scan
        run: |
          veracode static scan . \
            --fail-on-severity HIGH \
            --format json \
            --output sast-report.json

      - name: Run SCA scan
        run: |
          veracode sca scan . \
            --fail-on-severity HIGH \
            --format json \
            --output sca-report.json

      - name: Upload Veracode reports
        uses: actions/upload-artifact@v4.6.2
        with:
          name: veracode-reports
          path: |
            sast-report.json
            sca-report.json

  test-and-lint:
    needs: veracode-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r Company_Management_app/requirements.txt

      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest -q

  deploy:
    if: github.ref == 'refs/heads/main' && success()
    needs: test-and-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Render
        run: |
          curl -X POST https://api.render.com/deploy/srv-<TU-SRV-ID> \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}"
